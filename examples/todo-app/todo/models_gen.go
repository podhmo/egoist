package todo

import (
	"time"
	"github.com/podhmo/maperr"
	"encoding/json"
)

// this file is generated by egoist.generators.structkit

type Todo struct {
	Content string `json:"Content"`
	CreatedAt time.Time `json:"CreatedAt"`
}

func (t *Todo) UnmarshalJSON(b []byte) error {
	var err *maperr.Error

	// loading internal data
	var inner struct {
		Content *string `json:"Content"`// required
		CreatedAt *json.RawMessage `json:"CreatedAt"`// required
	}
	if rawErr := json.Unmarshal(b, &inner); rawErr != nil  {
		return err.AddSummary(rawErr.Error())
	}

	// binding field value and required check
	{
		if inner.Content != nil  {
			t.Content = *inner.Content
		} else  {
			err = err.Add("Content", maperr.Message{Text: "required"})
		}
		if inner.CreatedAt != nil  {
			if rawerr := json.Unmarshal(*inner.CreatedAt, &t.CreatedAt); rawerr != nil  {
				err = err.Add("CreatedAt", maperr.Message{Error: rawerr})
			}
		} else  {
			err = err.Add("CreatedAt", maperr.Message{Text: "required"})
		}
	}

	return err.Untyped()
}